# base_local_planner负责把上层规划器计算的速度指令发送给移动基座。
# 我们需要根据我们的机器人的规格来设置一些配置选项，以便开始运行。

controller_frequency: 2.0
recovery_behavior_enabled: false
clearing_rotation_allowed: false

# TrajectoryPlannerROS:
#    max_vel_x: 0.2 
#    min_vel_x: 0.01 
#    max_vel_theta: 0.8
#    min_vel_theta: -0.8
#    min_in_place_vel_theta: 1.0
#    acc_lim_x: 1.0
#    acc_lim_y: 0.0                # zero for a differential drive robot
#    acc_lim_theta: 0.6            # 3.2
   
#    holonomic_robot: false        # 是否为全向机器人。 值为false时为差分机器人； 为true时表示全向机器人
#    xy_goal_tolerance: 0.1        # 10 cm
#    yaw_goal_tolerance: 0.05      # about 6 degrees
#    sim_time: 0.8
#    sim_granularity: 0.05
#    vx_samples: 18
#    vtheta_samples: 20

GlobalPlanner:                                  # Also see: http://wiki.ros.org/global_planner
  old_navfn_behavior: false                     # Exactly mirror behavior of navfn, use defaults for other boolean parameters, default false
  use_quadratic: true                           # Use the quadratic approximation of the potential. Otherwise, use a simpler calculation, default true
  use_dijkstra: false                           # Use dijkstra's algorithm. Otherwise, A*, default true
  use_grid_path: false                          # Create a path that follows the grid boundaries. Otherwise, use a gradient descent method, default false
  
  allow_unknown:  true                          # Allow planner to plan through unknown space, default true
                                                #Needs to have track_unknown_space: true in the obstacle / voxel layer (in costmap_commons_param) to work
  planner_window_x: 0.0                         # default 0.0
  planner_window_y: 0.0                         # default 0.0
  default_tolerance: 0.0                        # If goal in obstacle, plan to the closest point in radius default_tolerance, default 0.0
  
